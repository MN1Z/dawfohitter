-- DAWFO HEADSHOTTA
-- Head Hitbox Expander with RGB UI

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Clean up existing GUI
if PlayerGui:FindFirstChild("DawfoHeadShotta") then
    PlayerGui.DawfoHeadShotta:Destroy()
end

-- Create main GUI
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TitleLabel = Instance.new("TextLabel")
local HeadSizeFrame = Instance.new("Frame")
local SizeLabel = Instance.new("TextLabel")
local SizeSlider = Instance.new("TextBox")
local SliderBar = Instance.new("Frame")
local SliderButton = Instance.new("TextButton")
local ApplyButton = Instance.new("TextButton")
local ResetButton = Instance.new("TextButton")
local StatusLabel = Instance.new("TextLabel")

-- Properties
ScreenGui.Name = "DawfoHeadShotta"
ScreenGui.Parent = PlayerGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 0, 0)
MainFrame.BorderColor3 = Color3.fromRGB(139, 0, 0)
MainFrame.BorderSizePixel = 3
MainFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
MainFrame.Size = UDim2.new(0, 350, 0, 280)
MainFrame.Active = true
MainFrame.Draggable = true

-- Add corner rounding
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame

-- Title Label
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = MainFrame
TitleLabel.BackgroundTransparency = 1
TitleLabel.Position = UDim2.new(0, 0, 0, 0)
TitleLabel.Size = UDim2.new(1, 0, 0, 50)
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.Text = "DAWFO HEADSHOTTA"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextScaled = true
TitleLabel.TextStrokeColor3 = Color3.fromRGB(139, 0, 0)
TitleLabel.TextStrokeTransparency = 0

-- Head Size Frame
HeadSizeFrame.Name = "HeadSizeFrame"
HeadSizeFrame.Parent = MainFrame
HeadSizeFrame.BackgroundColor3 = Color3.fromRGB(40, 0, 0)
HeadSizeFrame.BorderColor3 = Color3.fromRGB(100, 0, 0)
HeadSizeFrame.BorderSizePixel = 2
HeadSizeFrame.Position = UDim2.new(0.05, 0, 0.2, 0)
HeadSizeFrame.Size = UDim2.new(0.9, 0, 0.3, 0)

local HeadSizeCorner = Instance.new("UICorner")
HeadSizeCorner.CornerRadius = UDim.new(0, 8)
HeadSizeCorner.Parent = HeadSizeFrame

-- Size Label
SizeLabel.Name = "SizeLabel"
SizeLabel.Parent = HeadSizeFrame
SizeLabel.BackgroundTransparency = 1
SizeLabel.Position = UDim2.new(0, 10, 0, 5)
SizeLabel.Size = UDim2.new(0.6, 0, 0.4, 0)
SizeLabel.Font = Enum.Font.Gotham
SizeLabel.Text = "Head Size Multiplier:"
SizeLabel.TextColor3 = Color3.fromRGB(255, 200, 200)
SizeLabel.TextScaled = true
SizeLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Size Input
SizeSlider.Name = "SizeSlider"
SizeSlider.Parent = HeadSizeFrame
SizeSlider.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
SizeSlider.BorderColor3 = Color3.fromRGB(139, 0, 0)
SizeSlider.BorderSizePixel = 2
SizeSlider.Position = UDim2.new(0.65, 0, 0.1, 0)
SizeSlider.Size = UDim2.new(0.3, 0, 0.35, 0)
SizeSlider.Font = Enum.Font.GothamBold
SizeSlider.PlaceholderText = "5-50"
SizeSlider.Text = "20"
SizeSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
SizeSlider.TextScaled = true

local SizeSliderCorner = Instance.new("UICorner")
SizeSliderCorner.CornerRadius = UDim.new(0, 4)
SizeSliderCorner.Parent = SizeSlider

-- Slider Bar
SliderBar.Name = "SliderBar"
SliderBar.Parent = HeadSizeFrame
SliderBar.BackgroundColor3 = Color3.fromRGB(80, 0, 0)
SliderBar.BorderColor3 = Color3.fromRGB(139, 0, 0)
SliderBar.BorderSizePixel = 1
SliderBar.Position = UDim2.new(0.05, 0, 0.55, 0)
SliderBar.Size = UDim2.new(0.7, 0, 0.15, 0)

local SliderBarCorner = Instance.new("UICorner")
SliderBarCorner.CornerRadius = UDim.new(0, 3)
SliderBarCorner.Parent = SliderBar

-- Slider Button
SliderButton.Name = "SliderButton"
SliderButton.Parent = SliderBar
SliderButton.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
SliderButton.BorderSizePixel = 0
SliderButton.Position = UDim2.new(0.33, 0, 0, 0)
SliderButton.Size = UDim2.new(0, 20, 1, 0)
SliderButton.Font = Enum.Font.Gotham
SliderButton.Text = ""

local SliderButtonCorner = Instance.new("UICorner")
SliderButtonCorner.CornerRadius = UDim.new(0, 3)
SliderButtonCorner.Parent = SliderButton

-- Apply Button
ApplyButton.Name = "ApplyButton"
ApplyButton.Parent = MainFrame
ApplyButton.BackgroundColor3 = Color3.fromRGB(139, 0, 0)
ApplyButton.BorderColor3 = Color3.fromRGB(220, 20, 60)
ApplyButton.BorderSizePixel = 2
ApplyButton.Position = UDim2.new(0.05, 0, 0.6, 0)
ApplyButton.Size = UDim2.new(0.4, 0, 0.15, 0)
ApplyButton.Font = Enum.Font.GothamBold
ApplyButton.Text = "APPLY"
ApplyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ApplyButton.TextScaled = true

local ApplyCorner = Instance.new("UICorner")
ApplyCorner.CornerRadius = UDim.new(0, 6)
ApplyCorner.Parent = ApplyButton

-- Reset Button
ResetButton.Name = "ResetButton"
ResetButton.Parent = MainFrame
ResetButton.BackgroundColor3 = Color3.fromRGB(80, 0, 0)
ResetButton.BorderColor3 = Color3.fromRGB(139, 0, 0)
ResetButton.BorderSizePixel = 2
ResetButton.Position = UDim2.new(0.55, 0, 0.6, 0)
ResetButton.Size = UDim2.new(0.4, 0, 0.15, 0)
ResetButton.Font = Enum.Font.GothamBold
ResetButton.Text = "RESET"
ResetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ResetButton.TextScaled = true

local ResetCorner = Instance.new("UICorner")
ResetCorner.CornerRadius = UDim.new(0, 6)
ResetCorner.Parent = ResetButton

-- Status Label
StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = MainFrame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0.05, 0, 0.8, 0)
StatusLabel.Size = UDim2.new(0.9, 0, 0.15, 0)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = "Ready to modify heads..."
StatusLabel.TextColor3 = Color3.fromRGB(255, 200, 200)
StatusLabel.TextScaled = true

-- Variables
local originalHeadSizes = {}
local isDragging = false
local dragStart = nil
local startPos = nil

-- RGB Animation
spawn(function()
    while ScreenGui.Parent do
        for i = 0, 1, 0.01 do
            if not ScreenGui.Parent then break end
            local hue = i
            local rgb = Color3.fromHSV(hue, 1, 1)
            MainFrame.BorderColor3 = rgb
            TitleLabel.TextStrokeColor3 = rgb
            SliderButton.BackgroundColor3 = rgb
            ApplyButton.BorderColor3 = rgb
            wait(0.05)
        end
    end
end)

-- Slider functionality
local function updateSlider(value)
    value = math.clamp(value, 5, 50)
    SizeSlider.Text = tostring(value)
    local percentage = (value - 5) / 45
    SliderButton.Position = UDim2.new(percentage * 0.9, 0, 0, 0)
end

-- Slider dragging
SliderButton.MouseButton1Down:Connect(function()
    isDragging = true
end)

UserInputService.InputChanged:Connect(function(input)
    if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local sliderPos = SliderBar.AbsolutePosition.X
        local sliderSize = SliderBar.AbsoluteSize.X
        local mousePos = input.Position.X
        
        local percentage = math.clamp((mousePos - sliderPos) / sliderSize, 0, 0.9)
        local value = math.floor(5 + (percentage * 45))
        
        updateSlider(value)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDragging = false
    end
end)

-- Text input handling
SizeSlider.FocusLost:Connect(function()
    local value = tonumber(SizeSlider.Text)
    if value then
        value = math.clamp(value, 5, 50)
        updateSlider(value)
    else
        updateSlider(20)
    end
end)

-- Head modification functions
local function modifyHead(player, multiplier)
    if player == LocalPlayer then return end
    
    local character = player.Character
    if not character then return end
    
    local head = character:FindFirstChild("Head")
    if not head then return end
    
    -- Store original size if not already stored
    if not originalHeadSizes[player] then
        originalHeadSizes[player] = head.Size
    end
    
    -- Apply new size
    head.Size = originalHeadSizes[player] * multiplier
    head.Transparency = 0.5
    
    -- Update hitbox
    if head:FindFirstChild("Mesh") then
        head.Mesh.Scale = Vector3.new(multiplier, multiplier, multiplier)
    end
end

local function resetHead(player)
    if player == LocalPlayer then return end
    
    local character = player.Character
    if not character then return end
    
    local head = character:FindFirstChild("Head")
    if not head or not originalHeadSizes[player] then return end
    
    -- Restore original size
    head.Size = originalHeadSizes[player]
    head.Transparency = 0
    
    -- Reset hitbox
    if head:FindFirstChild("Mesh") then
        head.Mesh.Scale = Vector3.new(1, 1, 1)
    end
end

-- Apply button
ApplyButton.MouseButton1Click:Connect(function()
    local multiplier = tonumber(SizeSlider.Text) or 20
    multiplier = math.clamp(multiplier, 5, 50)
    
    local count = 0
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            modifyHead(player, multiplier)
            count = count + 1
        end
    end
    
    StatusLabel.Text = string.format("Modified %d heads with %dx multiplier", count, multiplier)
    
    -- Button feedback
    ApplyButton.BackgroundColor3 = Color3.fromRGB(60, 179, 113)
    wait(0.2)
    ApplyButton.BackgroundColor3 = Color3.fromRGB(139, 0, 0)
end)

-- Reset button
ResetButton.MouseButton1Click:Connect(function()
    local count = 0
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            resetHead(player)
            count = count + 1
        end
    end
    
    originalHeadSizes = {}
    StatusLabel.Text = string.format("Reset %d heads to normal", count)
    
    -- Button feedback
    ResetButton.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
    wait(0.2)
    ResetButton.BackgroundColor3 = Color3.fromRGB(80, 0, 0)
end)

-- Handle new players
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        wait(1) -- Wait for character to fully load
        if tonumber(SizeSlider.Text) and tonumber(SizeSlider.Text) > 5 then
            modifyHead(player, tonumber(SizeSlider.Text))
        end
    end)
end)

-- Handle existing players respawning
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        player.CharacterAdded:Connect(function()
            wait(1)
            if tonumber(SizeSlider.Text) and tonumber(SizeSlider.Text) > 5 then
                modifyHead(player, tonumber(SizeSlider.Text))
            end
        end)
    end
end

-- Mobile support improvements
if UserInputService.TouchEnabled then
    MainFrame.Active = true
    MainFrame.Draggable = true
    
    -- Improve touch responsiveness
    for _, button in pairs({ApplyButton, ResetButton, SliderButton}) do
        button.AutoButtonColor = false
    end
end

StatusLabel.Text = "DAWFO HEADSHOTTA loaded successfully!"
